@page "/restaurant/{Id}"
@inject PlacesCache cache
@inject NavigationManager navManager
@inject IJSRuntime JSRuntime;

@if (place == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenFieldset>
        <HeaderTemplate>
            <span>
                <b style="font-size:x-large">@place.Name</b>
            </span>
        </HeaderTemplate>
        <ChildContent>
            <div class="d-flex">
                <RadzenPanel class="flex-column" style="flex:50%">
                    <RadzenFieldset Text="Cuisine">
                        <RadzenDataList WrapItems="true" AllowPaging="true" Data="@place.CuisineList" TItem="Cuisine">
                            <Template Context="cuisine">
                                <RadzenLabel Text="@cuisine.Name"></RadzenLabel>
                            </Template>
                        </RadzenDataList>
                    </RadzenFieldset>
                    <RadzenButton Text="Phone" Click="@PhoneClick"></RadzenButton>
                    <RadzenButton Text="Website" Click="@WebClick"></RadzenButton>
                    <RadzenButton Text="Menu" Click="@MenuClick"></RadzenButton>
                    <RadzenFieldset Text="Specials">
                        <RadzenTextArea Value="@place.Specials"/>
                    </RadzenFieldset>
                </RadzenPanel>
                <div style="flex:50%">
                    <RadzenImage Path="images/mappin.png"/>
                </div>
            </div>
            <RadzenFieldset Text="Ordering & Delivery Options">
                <RadzenDataList WrapItems="true" AllowPaging="true" Data="@place.DeliveryServiceList" TItem="DeliveryService">
                    <Template Context="service">
                        <RadzenPanel>
                            <RadzenImage Path="@($"images/{service.ImageName}.png")" Style="max-width:20rem" />
                        </RadzenPanel>
                    </Template>
                </RadzenDataList>

            </RadzenFieldset>
        </ChildContent>
    </RadzenFieldset>
}

@code {

    [Parameter]
    public string Id { get; set; }

    private Place place;


    protected override async Task OnInitializedAsync()
    {
        place = await cache.GetPlace(Id);
    }   

    public void WebClick(EventArgs e)
    {
        JSRuntime.InvokeAsync<object>("open", place.URL, "_blank");
    }

    public void PhoneClick(EventArgs e)
    {
        JSRuntime.InvokeAsync<object>("open", $"tel:{place.Phone}", "_blank");
    }

    public void MenuClick(EventArgs e)
    {
        JSRuntime.InvokeAsync<object>("open", place.Menu, "_blank");
    }

}
