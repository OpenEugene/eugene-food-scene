@page "/restaurant/{Id}"
@inject PlacesCache cache
@inject NavigationManager navManager
@inject IJSRuntime JSRuntime;

@if (place == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenFieldset>
        <HeaderTemplate>
            <span>
                <b style="font-size:x-large">@place.Name</b>
            </span>
        </HeaderTemplate>
        <ChildContent>

            <RadzenFieldset Text="Cuisine">
                <RadzenDataList WrapItems="true" AllowPaging="true" Data="@place.CuisineList" TItem="Cuisine">
                    <Template Context="cuisine">
                        <RadzenLabel Text="@cuisine.Name"></RadzenLabel>
                    </Template>
                </RadzenDataList>
                
            </RadzenFieldset>
            <RadzenButton Text="Phone" Click="@PhoneClick"></RadzenButton>
            <RadzenButton Text="Website" Click="@WebClick"></RadzenButton>

        </ChildContent>
    </RadzenFieldset>
}

@code {

    [Parameter]
    public string Id { get; set; }

    private Place place;


    protected override async Task OnInitializedAsync()
    {
        place = await cache.GetPlace(Id);
    }

    public void WebClick(EventArgs e)
    {
        JSRuntime.InvokeAsync<object>("open", place.URL, "_blank");
    }

    public void PhoneClick(EventArgs e)
    {
        JSRuntime.InvokeAsync<object>("open", $"phone://{place.Phone}", "_blank");
    }

}
