@page "/restaurants"
@page "/"

@using AirtableApiClient
@using EugeneFoodScene.Data
@inject AirTableService AirTableService

@if (places == null)
{
    <p><em>Loading...</em></p>
}
else
{
<RadzenFieldset Text="Resturants">
<RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="15"
            AllowSorting="true" Data="@places" TItem="Place">
    <Columns>
        <RadzenGridColumn TItem="Place" Property="Name" Title="Restaurant" Sortable="true" Filterable="true">
            <Template Context="data">
                <RadzenLink Text="@data.Name" Path="@data.URL" target="_blank"></RadzenLink>
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Place" Property="Phone" Title="Phone" />
        <RadzenGridColumn TItem="Place" Property="CuisineDisplay" Title="Cuisines" />
        <RadzenGridColumn TItem="Place" Property="DeliveryOptionsDisplay" Title="Delivery Services" />
        
        <RadzenGridColumn TItem="Place" Property="Address" Title="Address" />
    </Columns>
</RadzenGrid>
</RadzenFieldset>
}

@code {
    private List<Place> places;

    protected override async Task OnInitializedAsync()
    {
        var records = await AirTableService.GetPlacesAsync();
        var cuisines = await AirTableService.GetPlacesAsync();
        places = (from r in records select r.Fields).ToList();

        // populate lookups
        foreach (var place in places)
        {
            place.CuisineList = new List<Cuisine>();
            foreach (var cuisine in place.Cuisines)
            {
                var fullCuisine = await AirTableService.GetCuisineAsync(cuisine);
                place.CuisineList.Add(fullCuisine);
            }

            if (place.DeliveryOptions != null)
            {
                place.DeliveryServiceList = new List<DeliveryService>();
                foreach (var option in place.DeliveryOptions)
                {
                    var fullList = await AirTableService.GetDeliveryServiceAsync(option);
                    place.DeliveryServiceList.Add(fullList);
                }
            }

            // convert to list like: "one, two, three"
            place.CuisineDisplay = String.Join(",", place.CuisineList.Select(c => c.Name));
            if (place.DeliveryOptions != null)
            {
                place.DeliveryOptionsDisplay = String.Join(",", place.DeliveryServiceList.Select(c => c.Name));
            }
        }
    }
}
