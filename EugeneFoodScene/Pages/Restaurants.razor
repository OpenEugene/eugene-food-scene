@page "/restaurants"
@page "/"

@using AirtableApiClient
@using EugeneFoodScene.Data
@inject AirTableService AirTableService

@if (places == null)
{
    <p><em>Loading...</em></p>
}
else
{

<div class="d-flex">
    <RadzenFieldset Text="Filter" class="col-3">

        <RadzenSelectBar TValue="int" class="flex-row">
            <Items>
                <RadzenSelectBarItem Text="Delivery" Value="1" />
                <RadzenSelectBarItem Text="Pickup" Value="2" />
            </Items>
        </RadzenSelectBar>
        <span>
            <RadzenCheckBox TValue="bool" />
            <RadzenLabel Text="Price v" Style="margin-left: 5px;margin-bottom: 20px" />
        </span>
        <RadzenSelectBar TValue="int" class="flex-row">
            <Items>
                <RadzenSelectBarItem Text="$" Value="1" />
                <RadzenSelectBarItem Text="$$" Value="2" />
                <RadzenSelectBarItem Text="$$$" Value="3" />
                <RadzenSelectBarItem Text="$$$$" Value="4" />
            </Items>
        </RadzenSelectBar>
        <span>
            <RadzenCheckBox TValue="bool" />
            <RadzenLabel Text="Location" Style="margin-left: 5px;margin-bottom: 20px" />
        </span>
        <span>
            <RadzenCheckBox TValue="bool" />
            <RadzenLabel Text="Curbside" Style="margin-left: 5px;margin-bottom: 20px" />
        </span>
</RadzenFieldset>
    <RadzenFieldset Text="Resturants" >
        <RadzenDataList WrapItems="true" AllowPaging="true" Data="@places" TItem="Place">
            <Template Context="place">
                <RadzenCard>
                    
                        <div>Name:</div>
                        <b><RadzenLink Text="@place.Name" Path="@place.URL" target="_blank"></RadzenLink></b>
                        <div>Phone:</div>
                        <b>@place.Phone</b>
                        <div>Cuisines:</div>
                        <b>@place.CuisineDisplay</b>
                        <div>"Delivery Services:</div>
                        <b>@place.DeliveryOptionsDisplay</b>

                        <div>"Address:</div>
                        <b>@place.Address</b>
                    
                </RadzenCard>
            </Template>
        </RadzenDataList>
    </RadzenFieldset>
</div>

}

@code {
    private List<Place> places;

    protected override async Task OnInitializedAsync()
    {
        var records = await AirTableService.GetPlacesAsync();
        var cuisines = await AirTableService.GetPlacesAsync();
        places = (from r in records select r.Fields).ToList();

        // populate lookups
        foreach (var place in places)
        {
            place.CuisineList = new List<Cuisine>();
            if (place.Cuisines != null)
            {
                foreach (var cuisine in place.Cuisines)
                {
                    var fullCuisine = await AirTableService.GetCuisineAsync(cuisine);
                    place.CuisineList.Add(fullCuisine);
                }
            }
            if (place.DeliveryOptions != null)
            {
                place.DeliveryServiceList = new List<DeliveryService>();
                foreach (var option in place.DeliveryOptions)
                {
                    var fullList = await AirTableService.GetDeliveryServiceAsync(option);
                    place.DeliveryServiceList.Add(fullList);
                }
            }

            // convert to list like: "one, two, three"
            place.CuisineDisplay = String.Join(",", place.CuisineList.Select(c => c.Name));
            if (place.DeliveryOptions != null)
            {
                place.DeliveryOptionsDisplay = String.Join(",", place.DeliveryServiceList.Select(c => c.Name));
            }
        }
    }
}
